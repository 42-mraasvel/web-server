
------------------
--    [Host]    --
------------------

    - A server MUST respond with a 400 (Bad Request) status code to any HTTP/1.1 request message that lacks a Host header field and to any request message that contains more than one Host header field or a Host header field with an invalid field-value. [RFC7230 page 45]
    - A client MUST send a Host header field in an HTTP/1.1 request even if the request-target is in the absolute-form, since this allows the Host information to be forwarded through ancient HTTP/1.0 proxies that might not have implemented Host.

------------------------------
--    [Content-length]      --
------------------------------
    - A sender MUST NOT send a Content-Length header field in any message that contains a Transfer-Encoding header field. 
    - A server MUST NOT send a Content-Length header field in any response with a status code of 1xx (Informational) or 204 (No Content).

-----------------------------------------
--    [Location]: [URI-reference]      --
-----------------------------------------
    - The "Location" header field is used in some responses to refer to a specific resource in relation to the response.
    - The field value consists of a single URI-reference. When it has the form of a relative reference ([RFC3986], Section 4.2), the final value is computed by resolving it against the effective request URI ([RFC3986], Section 5).
    - For 201 (Created) responses, the Location value refers to the primary resource created by the request.
    
    - Note: The Content-Location header field (Section 3.1.4.2) differs from Location in that the Content-Location refers to the most specific resource corresponding to the enclosed representation. It is therefore possible for a response to contain both the Location and Content-Location header fields.


------------------------------------
--    [Expect]: [100-continue]    --
------------------------------------
>> Error
    A server that receives an Expect field-value other than 100-continue MAY respond with a 417 (Expectation Failed) status code to indicate that the unexpected expectation cannot be met.
>> Success
    1. HTTP/1.0
        1.1 A server that receives a 100-continue expectation in an HTTP/1.0 request MUST ignore that expectation.
    2. HTTP/1.1 (or later)
        2.1 without message body yet (indicates a request message body will follow,)
            2.1.1 send an immediate response with a final status code, if that status can be determined by examining just the request-line and header fields,
                - A server that responds with a final status code before reading the entire message body SHOULD indicate in that response whether it intends to close the connection or continue reading and discarding the request message (see Section 6.6 of [RFC7230]).
            2.1.2 or send an immediate 100 (Continue) response to encourage the client to send the requestâ€™s message body.
                - The origin server MUST NOT wait for the message body before sending the 100 (Continue) response.
                - A server that sends a 100 (Continue) response MUST ultimately send a final status code, once the message body is received and processed, unless the connection is closed prematurely.
        2.2 already received some or all of the message body for the corresponding request, or if the framing indicates that there is no message body.
            - A server MAY omit sending a 100 (Continue) response 
